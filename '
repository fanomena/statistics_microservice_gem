require "graphql/client"
require "graphql/client/http"

module StatisticsClient
  class Client
    CONFIG  = StatisticsClient.configuration
    API_URL = CONFIG.api_url
    HTTP    = GraphQL::Client::HTTP.new("#{API_URL}/graphql") do
      def headers(context)
        {
          'Content-Type' => "application/json",
          'Authorization' => StatisticsClient.configuration.api_key
        }
      end
    end
    # Fetch latest schema on init, this will make a network request
    SCHEMA = GraphQL::Client.load_schema(@http)
  
    # However, it's smart to dump this to a JSON file and load from disk
    #
    # Run it from a script or rake task
    #   GraphQL::Client.dump_schema(SWAPI::HTTP, "path/to/schema.json")
    #
    # Schema = GraphQL::Client.load_schema("path/to/schema.json")
  
    CLIENT = GraphQL::Client.new(schema: @schema, execute: @http)

    def mutation(data)
      byebug
    end
  end
end
